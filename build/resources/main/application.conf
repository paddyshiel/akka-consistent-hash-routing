op-rabbit {
  topic-exchange-name = "inbound.exchange"
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2

      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
    }
  }
  connection {
    virtual-host = "/"
    hosts = ["127.0.0.1"]
    username = "guest"
    password = "guest"
    port = 5672
    ssl = false
    connection-timeout = 3s
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 0

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    deployment {
      /messageRoutingService/singleton/eventProcessingActor {
        router = consistent-hashing-pool
        nr-of-instances = 10
        cluster {
          enabled = on
          max-nr-of-instances-per-node = 1
          allow-local-routees = on
        }
      }
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
    }
  }

  cluster {
    name = "feedsRoutingCluster"
    seed-nodes = [
      "akka.tcp://"${akka.cluster.name}"@127.0.0.1:2551",
      "akka.tcp://"${akka.cluster.name}"@127.0.0.1:2552"
    ]
    metrics {
      enabled = off
      # Sigar native library extract location during tests.
      # Note: use per-jvm-instance folder when running multiple jvm on one host.
      native-library-extract-folder = ${user.dir}/target/native
    }
  }

  # Enable metrics extension in akka-cluster-metrics.
  extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]
}